version: "3"

services:
  monty_react:
    # sample:
    # container_name: sample
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    # volumes:
    #   - '.:/app'
    #   - '/app/node_modules'
    # ports:
    #   - 3000:3000
    # environment:
    #   - CHOKIDAR_USEPOLLING=true


  container_name: monty_react
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./frontend/:/app
    ports:
      - "3000:3000"
    networks:
      - monty_network
    restart: on-failure
    depends_on:
      - monty_django
    working_dir: /app
    command: bash -c "npm install && npm start"

  monty_django:
    build: ./Backend/
    container_name: monty_django
    command: "python3 manage.py runserver 0.0.0.0:8000"
    depends_on:
      - mysql_db
    volumes:
      - ./Backend/:/app
    ports:
      - "8000:8000"
    networks:
      - monty_network


# https://stackoverflow.com/questions/36617682/docker-compose-mysql-import-sql
  mysql_db:
    image: mysql:5.6
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - ./mysql-dump:/docker-entrypoint-initdb.d
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
networks:
  monty_network: